name: simulation
root: ./

pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=t650; export WORLD_NAME=simulation_challenge2
startup_window: flexbe

windows:
  - gazebo:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch wall_simulation simulation.launch gui:=true
  - spawn:
      layout: even-vertical
      panes:
        - waitForSimulation; rosrun mrs_simulation spawn --$UAV_TYPE --run --delete --enable-ground-truth --wall-challenge --file pos1.csv
  - control:
      layout: even-vertical
      panes:
        - waitForOdometry; roslaunch mrs_uav_general core.launch config_control_manager:=./custom_configs/control_manager.yaml config_odometry:=./custom_configs/odometry.yaml config_mpc_tracker:=./custom_configs/mpc_tracker.yaml config_uav_manager:=./custom_configs/uav_manager.yaml config_gain_manager:=./custom_configs/gain_manager.yaml
  - brick_detection:
      layout: even-vertical
      panes:
        - waitForControl; roslaunch brick_detection brick_detection.launch custom_config:=./custom_configs/brick_detection.yaml
  - brick_estimation:
      layout: even-vertical
      panes:
        - waitForControl; roslaunch brick_estimation brick_estimation.launch
  - brick_grasping:
      layout: even-vertical
      panes:
        - waitForControl; roslaunch brick_grasping brick_grasping.launch
  - brick_mapping:
      layout: even-vertical
      panes:
        - waitForControl; roslaunch brick_mapping brick_mapping.launch
  - flexbe:
      layout: even-vertical
      panes:
        - waitForControl; roslaunch mrs_flexbe_behaviors run_wall_sm.launch
        #- 'history -s "waitForControl; roslaunch mrs_flexbe_behaviors run_wall_sm.launch"'
  - robag_record:
      layout: even-vertical
      panes:
        - 'history -s "rosbag record /$UAV_NAME/brick_estimation/map"'
  - takeoff:
      layout: even-vertical
      panes:
        #{ uav1
        - 'waitForControl;
           sleep 20;
           rosservice call /$UAV_NAME/mavros/cmd/arming 1;
           sleep 1;
           rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
  - goto:
      layout: even-vertical
      panes:
        - 'history -s rosservice call /$UAV_NAME/brick_grasping/drop;
           history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[0.0, -12.0, 3.0, 0.0\]\";
           history -s rosservice call /$UAV_NAME/brick_grasping/start 1;
           history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[0.0, -12.0, 2.5, 0.0\]\"'
  - auto_start:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch automatic_start_mbzirc automatic_start_mbzirc.launch challenge:=wall rc_mode:=1
  - plan_keeper:
      layout: even-vertical
      panes:
        - waitForSimulation; roslaunch plan_keeper uav.launch
  - arena_scan_planner:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch arena_scan_planner arena_scan_planner.launch
  - simulated_magnet:
      layout: even-vertical
      panes:
        - waitForControl; roslaunch simulated_magnet simulation.launch
  - sim_battery:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch sim_battery sim_battery.launch
  - fuse:
      layout: even-vertical
      panes:
        - 'history -s rosservice call /$UAV_NAME/odometry/change_estimator_type_string BRICK'
  - roscore:
      layout: even-vertical
      panes:
        - roscore
